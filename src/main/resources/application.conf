akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    log-config-on-start = on
    loglevel = "DEBUG"

    extensions = [akka.persistence.Persistence]

    persistence {

        journal {
            plugin = "akka.persistence.journal.leveldb"
            auto-start-journals = ["akka.persistence.journal.leveldb"]
        }

        snapshot-store {
            plugin = "akka.persistence.snapshot-store.local"
            auto-start-snapshot-stores = ["akka.persistence.snapshot-store.local"]
        }

    }

    actor {
        provider = "cluster"
        serialization-bindings {
            "com.trading.server.MsgSerializerMaker" = jackson-json
        }
        allow-java-serialization = on
    }
    remote.artery {
        canonical {
            hostname: "127.0.0.1"
            port = 2551
        }
    }

    cluster {
        seed-nodes : [
            "akka://ClusterSystem@127.0.0.1:2551",
            "akka://ClusterSystem@127.0.0.1:2552",
        ]
        downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
        sharding {
            number-of-shards = 10
        }
    }
}

akka.management.cluster.bootstrap {
    contact-point-discovery {
        service-name: "exchanger"
        discovery-method: "akka.discovery"
        required-contact-point-nr = 2
    }
}

akka.discovery.method = "akka-dns"
akka.cluster.shutdown-after-unsuccessful-join-seed-nodes = 30s
akka.coordinate-shutdown.exit-jvm = on


http.interface=127.0.0.1
http.port=8080

akka.management.http.port = 9101